# Generated by Django 3.2.4 on 2022-07-03 13:30

import astu_inventory.apps.auser.models
import astu_inventory.apps.auser.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the department.', max_length=150, verbose_name='name')),
                ('short_name', models.CharField(help_text='Abbrivated name of the department. eg CSE, ECE, EPCE', max_length=10, verbose_name='short name')),
                ('description', models.TextField(help_text='Short description about the department.', max_length=1000, verbose_name='description')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (0, 'Deactivated')], default=1, help_text="Designates that this department is active in the college.Deactivating the department makes all it's decendants (staffs, stores, labs) inactive in the system", verbose_name='status')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'department',
                'verbose_name_plural': 'departments',
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(help_text='Use the format +2519******** or 09********.', max_length=13, unique=True, validators=[astu_inventory.apps.auser.validators.PhoneNumberValidator()], verbose_name='phone number')),
                ('location', models.CharField(blank=True, help_text='Physical location.', max_length=200, null=True, verbose_name='address')),
                ('po_box', models.CharField(blank=True, help_text='Personal P.O Box, if you have one.', max_length=10, null=True, verbose_name='P.O Box')),
                ('staff_id', models.CharField(error_messages={'unique': 'A user with that staff ID already exists.'}, help_text='Unique staff ID number, that the college use to identify. ', max_length=15, unique=True, verbose_name='staff ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('sex', models.CharField(blank=True, choices=[('M', 'MALE'), ('F', 'FEMALE')], max_length=2, null=True, verbose_name='gender')),
                ('profile_picture', models.ImageField(default='default.svg', upload_to='profile_pictures/', verbose_name='profile picture')),
                ('department', models.ForeignKey(limit_choices_to={'status': 1}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='staff_members', to='auser.department', verbose_name='department')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user',
            },
            managers=[
                ('objects', astu_inventory.apps.auser.models.UserManager()),
            ],
        ),
    ]
